{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjuncho/Documents/SNU_BFA/KB_capstone/KB_PB_Agent_AI_JinShiWang/frontend/src/components/client_pipeline/PortfolioChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchClientPortfolioChart } from '../../api/clients';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioChart = ({\n  clientId\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (clientId) {\n      loadChartData();\n    }\n  }, [clientId]);\n  const loadChartData = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const data = await fetchClientPortfolioChart(clientId);\n      setChartData(data);\n    } catch (err) {\n      setError('포트폴리오 차트 데이터를 불러오는데 실패했습니다: ' + err.message);\n      console.error('Portfolio chart loading error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createDonutChart = (data, title) => {\n    if (!data || data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n\n    // 색상 팔레트\n    const colors = ['#F5E6A3', '#8B7355', '#D4B96A', '#7BA05B', '#C4756E', '#E5DFD1', '#FAF2D1', '#E5D084', '#6D5A42', '#FEFCF7'];\n    const total = data.reduce((sum, item) => sum + item.percentage, 0);\n    let currentAngle = 0;\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n    const createArcPath = (startAngle, endAngle, outerRadius, innerRadius = 40) => {\n      const start = polarToCartesian(centerX, centerY, outerRadius, endAngle);\n      const end = polarToCartesian(centerX, centerY, outerRadius, startAngle);\n      const innerStart = polarToCartesian(centerX, centerY, innerRadius, endAngle);\n      const innerEnd = polarToCartesian(centerX, centerY, innerRadius, startAngle);\n      const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n      return [\"M\", start.x, start.y, \"A\", outerRadius, outerRadius, 0, largeArcFlag, 0, end.x, end.y, \"L\", innerEnd.x, innerEnd.y, \"A\", innerRadius, innerRadius, 0, largeArcFlag, 1, innerStart.x, innerStart.y, \"Z\"].join(\" \");\n    };\n    const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n      const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n      return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians)\n      };\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"donut-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"chart-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"200\",\n          height: \"200\",\n          viewBox: \"0 0 200 200\",\n          className: \"donut-chart\",\n          children: data.map((item, index) => {\n            const angle = item.percentage / 100 * 360;\n            const path = createArcPath(currentAngle, currentAngle + angle, radius);\n            const textAngle = currentAngle + angle / 2;\n            const textRadius = 60;\n            const textPos = polarToCartesian(centerX, centerY, textRadius, textAngle);\n            currentAngle += angle;\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              className: \"chart-segment\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: path,\n                fill: colors[index % colors.length],\n                stroke: \"#fff\",\n                strokeWidth: \"2\",\n                className: \"chart-arc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), item.percentage > 5 && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: textPos.x,\n                y: textPos.y,\n                textAnchor: \"middle\",\n                dominantBaseline: \"middle\",\n                fontSize: \"10\",\n                fill: \"#333\",\n                fontWeight: \"bold\",\n                children: [item.percentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-legend\",\n          children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: colors[index % colors.length]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-label\",\n              children: item.sector\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"legend-value\",\n              children: [item.percentage, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-chart-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \\uCC28\\uD2B8\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-chart-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n  if (!chartData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uCC28\\uD2B8 \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    client_name,\n    risk_profile_info,\n    client_portfolio,\n    recommended_portfolio\n  } = chartData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"portfolio-chart-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \\uBD84\\uC11D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-charts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-column\",\n        children: createDonutChart(client_portfolio, `${client_name}님 포트폴리오`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-column\",\n        children: createDonutChart(recommended_portfolio, `${(risk_profile_info === null || risk_profile_info === void 0 ? void 0 : risk_profile_info.korean_name) || (risk_profile_info === null || risk_profile_info === void 0 ? void 0 : risk_profile_info.label) || '추천'} 위험군 포트폴리오`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-analysis-note\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [client_name, \"\\uB2D8\\uC758 \\uD22C\\uC790\\uC131\\uD5A5:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: (risk_profile_info === null || risk_profile_info === void 0 ? void 0 : risk_profile_info.color) || '#666'\n          },\n          children: (risk_profile_info === null || risk_profile_info === void 0 ? void 0 : risk_profile_info.korean_name) || (risk_profile_info === null || risk_profile_info === void 0 ? void 0 : risk_profile_info.label)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"risk-description\",\n        children: risk_profile_info === null || risk_profile_info === void 0 ? void 0 : risk_profile_info.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioChart, \"zmNCEWfiZ03ozlo09uLnZv1o3F4=\");\n_c = PortfolioChart;\nexport default PortfolioChart;\nvar _c;\n$RefreshReg$(_c, \"PortfolioChart\");","map":{"version":3,"names":["React","useState","useEffect","fetchClientPortfolioChart","jsxDEV","_jsxDEV","PortfolioChart","clientId","_s","chartData","setChartData","loading","setLoading","error","setError","loadChartData","data","err","message","console","createDonutChart","title","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colors","total","reduce","sum","item","percentage","currentAngle","radius","centerX","centerY","createArcPath","startAngle","endAngle","outerRadius","innerRadius","start","polarToCartesian","end","innerStart","innerEnd","largeArcFlag","x","y","join","angleInDegrees","angleInRadians","Math","PI","cos","sin","width","height","viewBox","map","index","angle","path","textAngle","textRadius","textPos","d","fill","stroke","strokeWidth","textAnchor","dominantBaseline","fontSize","fontWeight","style","backgroundColor","sector","client_name","risk_profile_info","client_portfolio","recommended_portfolio","korean_name","label","color","description","_c","$RefreshReg$"],"sources":["/Users/hyungjuncho/Documents/SNU_BFA/KB_capstone/KB_PB_Agent_AI_JinShiWang/frontend/src/components/client_pipeline/PortfolioChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchClientPortfolioChart } from '../../api/clients';\n\nconst PortfolioChart = ({ clientId }) => {\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (clientId) {\n      loadChartData();\n    }\n  }, [clientId]);\n\n  const loadChartData = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const data = await fetchClientPortfolioChart(clientId);\n      setChartData(data);\n    } catch (err) {\n      setError('포트폴리오 차트 데이터를 불러오는데 실패했습니다: ' + err.message);\n      console.error('Portfolio chart loading error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createDonutChart = (data, title) => {\n    if (!data || data.length === 0) {\n      return (\n        <div className=\"chart-placeholder\">\n          <p>데이터가 없습니다</p>\n        </div>\n      );\n    }\n\n    // 색상 팔레트\n    const colors = [\n      '#F5E6A3', '#8B7355', '#D4B96A', '#7BA05B', '#C4756E',\n      '#E5DFD1', '#FAF2D1', '#E5D084', '#6D5A42', '#FEFCF7'\n    ];\n\n    const total = data.reduce((sum, item) => sum + item.percentage, 0);\n    let currentAngle = 0;\n\n    const radius = 80;\n    const centerX = 100;\n    const centerY = 100;\n\n    const createArcPath = (startAngle, endAngle, outerRadius, innerRadius = 40) => {\n      const start = polarToCartesian(centerX, centerY, outerRadius, endAngle);\n      const end = polarToCartesian(centerX, centerY, outerRadius, startAngle);\n      const innerStart = polarToCartesian(centerX, centerY, innerRadius, endAngle);\n      const innerEnd = polarToCartesian(centerX, centerY, innerRadius, startAngle);\n\n      const largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n      return [\n        \"M\", start.x, start.y,\n        \"A\", outerRadius, outerRadius, 0, largeArcFlag, 0, end.x, end.y,\n        \"L\", innerEnd.x, innerEnd.y,\n        \"A\", innerRadius, innerRadius, 0, largeArcFlag, 1, innerStart.x, innerStart.y,\n        \"Z\"\n      ].join(\" \");\n    };\n\n    const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {\n      const angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n      return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n      };\n    };\n\n    return (\n      <div className=\"donut-chart-container\">\n        <h4 className=\"chart-title\">{title}</h4>\n        <div className=\"chart-content\">\n          <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" className=\"donut-chart\">\n            {data.map((item, index) => {\n              const angle = (item.percentage / 100) * 360;\n              const path = createArcPath(currentAngle, currentAngle + angle, radius);\n              const textAngle = currentAngle + angle / 2;\n              const textRadius = 60;\n              const textPos = polarToCartesian(centerX, centerY, textRadius, textAngle);\n              \n              currentAngle += angle;\n\n              return (\n                <g key={index} className=\"chart-segment\">\n                  <path\n                    d={path}\n                    fill={colors[index % colors.length]}\n                    stroke=\"#fff\"\n                    strokeWidth=\"2\"\n                    className=\"chart-arc\"\n                  />\n                  {item.percentage > 5 && (\n                    <text\n                      x={textPos.x}\n                      y={textPos.y}\n                      textAnchor=\"middle\"\n                      dominantBaseline=\"middle\"\n                      fontSize=\"10\"\n                      fill=\"#333\"\n                      fontWeight=\"bold\"\n                    >\n                      {item.percentage}%\n                    </text>\n                  )}\n                </g>\n              );\n            })}\n          </svg>\n          <div className=\"chart-legend\">\n            {data.map((item, index) => (\n              <div key={index} className=\"legend-item\">\n                <div \n                  className=\"legend-color\" \n                  style={{ backgroundColor: colors[index % colors.length] }}\n                ></div>\n                <span className=\"legend-label\">{item.sector}</span>\n                <span className=\"legend-value\">{item.percentage}%</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"portfolio-chart-loading\">\n        <div className=\"loading-spinner\"></div>\n        <span>포트폴리오 차트를 불러오는 중...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"portfolio-chart-error\">\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  if (!chartData) {\n    return <div>차트 데이터를 불러오고 있습니다...</div>;\n  }\n\n  const { client_name, risk_profile_info, client_portfolio, recommended_portfolio } = chartData;\n\n  return (\n    <div className=\"portfolio-chart-section\">\n      <h3 className=\"section-title\">포트폴리오 분석</h3>\n      <div className=\"portfolio-charts-container\">\n        <div className=\"chart-column\">\n          {createDonutChart(client_portfolio, `${client_name}님 포트폴리오`)}\n        </div>\n        <div className=\"chart-column\">\n          {createDonutChart(\n            recommended_portfolio, \n            `${risk_profile_info?.korean_name || risk_profile_info?.label || '추천'} 위험군 포트폴리오`\n          )}\n        </div>\n      </div>\n      <div className=\"portfolio-analysis-note\">\n        <p>\n          <strong>{client_name}님의 투자성향:</strong> \n          <span style={{ color: risk_profile_info?.color || '#666' }}>\n            {risk_profile_info?.korean_name || risk_profile_info?.label}\n          </span>\n        </p>\n        <p className=\"risk-description\">{risk_profile_info?.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}