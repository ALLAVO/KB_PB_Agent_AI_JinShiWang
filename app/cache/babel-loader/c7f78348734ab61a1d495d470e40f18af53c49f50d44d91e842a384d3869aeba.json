{"ast":null,"code":"// proxy ÏÑ§Ï†ï ÎïåÎ¨∏Ïóê ÏÉÅÎåÄ Í≤ΩÎ°ú ÏÇ¨Ïö©\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\nexport async function fetchIndustryTop3Articles({\n  sector,\n  endDate\n}) {\n  try {\n    const url = `${API_BASE_URL}/industry/top3_articles`;\n    console.log('üîó API ÏöîÏ≤≠ URL:', url);\n    console.log('üìä ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞:', {\n      sector,\n      endDate\n    });\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sector: sector,\n        end_date: endDate\n      })\n    });\n    console.log('üì° ÏùëÎãµ ÏÉÅÌÉú:', response.status, response.statusText);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('‚úÖ ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', data);\n    return data;\n  } catch (error) {\n    console.error('‚ùå Error fetching industry top3 articles:', error);\n    throw error;\n  }\n}\nexport async function fetchIndustryTop10Companies({\n  sector,\n  endDate\n}) {\n  try {\n    const url = `${API_BASE_URL}/industry/top10_companies`;\n    console.log('üîó API ÏöîÏ≤≠ URL:', url);\n    console.log('üìä ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞:', {\n      sector,\n      endDate\n    });\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sector: sector,\n        end_date: endDate\n      })\n    });\n    console.log('üì° ÏùëÎãµ ÏÉÅÌÉú:', response.status, response.statusText);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('‚úÖ ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', data);\n    return data;\n  } catch (error) {\n    console.error('‚ùå Error fetching industry top10 companies:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchIndustryTop3Articles","sector","endDate","url","console","log","response","fetch","method","headers","body","JSON","stringify","end_date","status","statusText","ok","Error","data","json","error","fetchIndustryTop10Companies"],"sources":["/Users/hyungjuncho/Documents/SNU_BFA/KB_capstone/KB_PB_Agent_AI_JinShiWang/frontend/src/api/industry.js"],"sourcesContent":["// proxy ÏÑ§Ï†ï ÎïåÎ¨∏Ïóê ÏÉÅÎåÄ Í≤ΩÎ°ú ÏÇ¨Ïö©\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\nexport async function fetchIndustryTop3Articles({ sector, endDate }) {\n  try {\n    const url = `${API_BASE_URL}/industry/top3_articles`;\n    console.log('üîó API ÏöîÏ≤≠ URL:', url);\n    console.log('üìä ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞:', { sector, endDate });\n    \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        sector: sector,\n        end_date: endDate\n      }),\n    });\n\n    console.log('üì° ÏùëÎãµ ÏÉÅÌÉú:', response.status, response.statusText);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    console.log('‚úÖ ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', data);\n    return data;\n  } catch (error) {\n    console.error('‚ùå Error fetching industry top3 articles:', error);\n    throw error;\n  }\n}\n\nexport async function fetchIndustryTop10Companies({ sector, endDate }) {\n  try {\n    const url = `${API_BASE_URL}/industry/top10_companies`;\n    console.log('üîó API ÏöîÏ≤≠ URL:', url);\n    console.log('üìä ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞:', { sector, endDate });\n    \n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        sector: sector,\n        end_date: endDate\n      }),\n    });\n\n    console.log('üì° ÏùëÎãµ ÏÉÅÌÉú:', response.status, response.statusText);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    console.log('‚úÖ ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:', data);\n    return data;\n  } catch (error) {\n    console.error('‚ùå Error fetching industry top10 companies:', error);\n    throw error;\n  }\n}\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,OAAO,eAAeC,yBAAyBA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EACnE,IAAI;IACF,MAAMC,GAAG,GAAG,GAAGP,YAAY,yBAAyB;IACpDQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE;MAAEJ,MAAM;MAAEC;IAAQ,CAAC,CAAC;IAE9C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;MAChCK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBX,MAAM,EAAEA,MAAM;QACdY,QAAQ,EAAEX;MACZ,CAAC;IACH,CAAC,CAAC;IAEFE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAACQ,MAAM,EAAER,QAAQ,CAACS,UAAU,CAAC;IAE9D,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBX,QAAQ,CAACQ,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMI,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IAClCf,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEa,IAAI,CAAC;IAC9B,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdhB,OAAO,CAACgB,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeC,2BAA2BA,CAAC;EAAEpB,MAAM;EAAEC;AAAQ,CAAC,EAAE;EACrE,IAAI;IACF,MAAMC,GAAG,GAAG,GAAGP,YAAY,2BAA2B;IACtDQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,GAAG,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE;MAAEJ,MAAM;MAAEC;IAAQ,CAAC,CAAC;IAE9C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;MAChCK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBX,MAAM,EAAEA,MAAM;QACdY,QAAQ,EAAEX;MACZ,CAAC;IACH,CAAC,CAAC;IAEFE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAACQ,MAAM,EAAER,QAAQ,CAACS,UAAU,CAAC;IAE9D,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBX,QAAQ,CAACQ,MAAM,EAAE,CAAC;IAC3D;IAEA,MAAMI,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IAClCf,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEa,IAAI,CAAC;IAC9B,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdhB,OAAO,CAACgB,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}