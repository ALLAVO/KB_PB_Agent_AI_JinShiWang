{"ast":null,"code":"var _jsxFileName = \"/Users/hyungjuncho/Documents/SNU_BFA/KB_capstone/KB_PB_Agent_AI_JinShiWang/frontend/src/components/market_pipeline/FICCchart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombinedFinancialChart = ({\n  treasuryData,\n  fxData,\n  loading,\n  error\n}) => {\n  _s();\n  const [selectedType, setSelectedType] = useState('us_2y');\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#666',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px',\n        border: '1px solid #e9ecef'\n      },\n      children: \"\\uAE08\\uC735 \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#d32f2f',\n        backgroundColor: '#ffebee',\n        borderRadius: '8px',\n        border: '1px solid #ffcdd2'\n      },\n      children: [\"\\uAE08\\uC735 \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294\\uB370 \\uC2E4\\uD328\\uD588\\uC2B5\\uB2C8\\uB2E4: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  if (!treasuryData || !fxData || !treasuryData.dates || !fxData.dates) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#666',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px',\n        border: '1px solid #e9ecef'\n      },\n      children: \"\\uAE08\\uC735 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 차트 크기 설정\n  const width = 800;\n  const height = 300;\n  const padding = 50;\n\n  // 모든 데이터 타입 정보\n  const dataInfo = {\n    us_2y: {\n      name: '미국 국채 2년물',\n      color: '#e74c3c',\n      data: treasuryData.us_2y,\n      dates: treasuryData.dates,\n      format: v => (v === null || v === void 0 ? void 0 : v.toFixed(2)) + '%',\n      decimals: 2\n    },\n    us_10y: {\n      name: '미국 국채 10년물',\n      color: '#3498db',\n      data: treasuryData.us_10y,\n      dates: treasuryData.dates,\n      format: v => (v === null || v === void 0 ? void 0 : v.toFixed(2)) + '%',\n      decimals: 2\n    },\n    usd_krw: {\n      name: 'USD/KRW',\n      color: '#e67e22',\n      data: fxData.usd_krw,\n      dates: fxData.dates,\n      format: v => v === null || v === void 0 ? void 0 : v.toLocaleString(),\n      decimals: 0\n    },\n    eur_usd: {\n      name: 'EUR/USD',\n      color: '#9b59b6',\n      data: fxData.eur_usd,\n      dates: fxData.dates,\n      format: v => v === null || v === void 0 ? void 0 : v.toFixed(4),\n      decimals: 4\n    }\n  };\n  const currentData = dataInfo[selectedType];\n  const currentValues = currentData.data.filter(val => val !== null && val !== undefined);\n  const currentDates = currentData.dates;\n  if (currentValues.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#666',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px',\n        border: '1px solid #e9ecef'\n      },\n      children: \"\\uC120\\uD0DD\\uB41C \\uAE30\\uAC04\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  const maxValue = Math.max(...currentValues);\n  const minValue = Math.min(...currentValues);\n  const valueRange = maxValue - minValue || 1;\n  const avgValue = currentValues.reduce((sum, v) => sum + v, 0) / currentValues.length;\n  const dateCount = currentDates.length;\n  const xStep = (width - 2 * padding) / (dateCount - 1 || 1);\n  const yScale = value => {\n    if (value === null || value === undefined) return null;\n    return padding + (maxValue - value) / valueRange * (height - 2 * padding);\n  };\n\n  // 평균선 Y 좌표\n  const avgY = yScale(avgValue);\n\n  // fill_between 영역 polygon 생성 (평균선 기준)\n  const createAvgFillPolygons = () => {\n    const aboveAreas = [];\n    const belowAreas = [];\n    let currentArea = [];\n    let currentType = null;\n    function pushArea(type, area) {\n      if (area.length > 1) {\n        (type === 'above' ? aboveAreas : belowAreas).push([...area]);\n      }\n    }\n    for (let i = 0; i < currentData.data.length; i++) {\n      const val = currentData.data[i];\n      if (val === null || val === undefined) continue;\n      const x = padding + i * xStep;\n      const y = yScale(val);\n      const isAbove = val >= avgValue;\n      if (currentType === null) {\n        currentType = isAbove ? 'above' : 'below';\n        currentArea.push({\n          x,\n          y\n        });\n      } else if (isAbove && currentType === 'above' || !isAbove && currentType === 'below') {\n        currentArea.push({\n          x,\n          y\n        });\n      } else {\n        // 평균선과 교차: 보간점 추가\n        const prevIdx = i - 1;\n        const prevVal = currentData.data[prevIdx];\n        const x1 = padding + prevIdx * xStep;\n        const y1 = yScale(prevVal);\n        const x2 = x;\n        const y2 = y;\n        const t = (avgValue - prevVal) / (val - prevVal);\n        const crossX = x1 + t * (x2 - x1);\n        const crossY = avgY;\n        currentArea.push({\n          x: crossX,\n          y: crossY\n        });\n        pushArea(currentType, currentArea);\n        currentType = isAbove ? 'above' : 'below';\n        currentArea = [{\n          x: crossX,\n          y: crossY\n        }, {\n          x,\n          y\n        }];\n      }\n    }\n    pushArea(currentType, currentArea);\n\n    // polygon 생성\n    const polygons = [];\n    aboveAreas.forEach(area => {\n      const points = [{\n        x: area[0].x,\n        y: avgY\n      }, ...area, {\n        x: area[area.length - 1].x,\n        y: avgY\n      }];\n      polygons.push(/*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: points.map(p => `${p.x},${p.y}`).join(' '),\n        fill: \"url(#red-gradient-treasury)\",\n        stroke: \"none\",\n        style: {\n          pointerEvents: 'none'\n        }\n      }, 'avg-above-' + area[0].x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this));\n    });\n    belowAreas.forEach(area => {\n      const points = [{\n        x: area[0].x,\n        y: avgY\n      }, ...area, {\n        x: area[area.length - 1].x,\n        y: avgY\n      }];\n      polygons.push(/*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: points.map(p => `${p.x},${p.y}`).join(' '),\n        fill: \"url(#blue-gradient-treasury)\",\n        stroke: \"none\",\n        style: {\n          pointerEvents: 'none'\n        }\n      }, 'avg-below-' + area[0].x, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this));\n    });\n    return polygons;\n  };\n\n  // 구간별 색상 라인(평균선 기준)\n  const createSegments = () => {\n    const segments = [];\n    for (let i = 0; i < currentData.data.length - 1; i++) {\n      const v1 = currentData.data[i];\n      const v2 = currentData.data[i + 1];\n      if (v1 === null || v1 === undefined || v2 === null || v2 === undefined) continue;\n      const x1 = padding + i * xStep;\n      const y1 = yScale(v1);\n      const x2 = padding + (i + 1) * xStep;\n      const y2 = yScale(v2);\n      const above1 = v1 >= avgValue;\n      const above2 = v2 >= avgValue;\n      if (above1 === above2) {\n        segments.push({\n          x1,\n          y1,\n          x2,\n          y2,\n          color: above1 ? '#ef4444' : '#3b82f6'\n        });\n      } else {\n        // 평균선과 교차\n        const t = (avgValue - v1) / (v2 - v1);\n        const crossX = x1 + t * (x2 - x1);\n        const crossY = avgY;\n        segments.push({\n          x1,\n          y1,\n          x2: crossX,\n          y2: crossY,\n          color: above1 ? '#ef4444' : '#3b82f6'\n        });\n        segments.push({\n          x1: crossX,\n          y1: crossY,\n          x2,\n          y2,\n          color: above2 ? '#ef4444' : '#3b82f6'\n        });\n      }\n    }\n    return segments;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#ffffff',\n      borderRadius: '8px',\n      border: '1px solid #e0e0e0',\n      padding: '20px',\n      marginBottom: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        gap: '8px',\n        flexWrap: 'wrap'\n      },\n      children: Object.keys(dataInfo).map(key => {\n        const isSelected = selectedType === key;\n        const mainColor = '#EFC352';\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedType(key),\n          style: {\n            padding: '8px 16px',\n            border: isSelected ? `2px solid ${mainColor}` : '1px solid #ddd',\n            borderRadius: '6px',\n            backgroundColor: isSelected ? `${mainColor}20` : '#fff',\n            color: isSelected ? mainColor : '#333',\n            cursor: 'pointer',\n            fontWeight: isSelected ? 'bold' : 'normal',\n            fontSize: '14px',\n            transition: 'all 0.2s ease'\n          },\n          children: dataInfo[key].name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        style: {\n          minWidth: '800px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: [/*#__PURE__*/_jsxDEV(\"pattern\", {\n            id: \"grid-combined\",\n            width: \"50\",\n            height: \"50\",\n            patternUnits: \"userSpaceOnUse\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M 50 0 L 0 0 0 50\",\n              fill: \"none\",\n              stroke: \"#f0f0f0\",\n              strokeWidth: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"red-gradient-treasury\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0%\",\n              stopColor: \"#ef4444\",\n              stopOpacity: \"0.25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"100%\",\n              stopColor: \"#ef4444\",\n              stopOpacity: \"0.05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"blue-gradient-treasury\",\n            x1: \"0\",\n            y1: \"1\",\n            x2: \"0\",\n            y2: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"0%\",\n              stopColor: \"#3b82f6\",\n              stopOpacity: \"0.18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"100%\",\n              stopColor: \"#3b82f6\",\n              stopOpacity: \"0.05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n          width: width,\n          height: height,\n          fill: \"url(#grid-combined)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: padding,\n          y1: padding,\n          x2: padding,\n          y2: height - padding,\n          stroke: \"#ccc\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: padding,\n          y1: height - padding,\n          x2: width - padding,\n          y2: height - padding,\n          stroke: \"#ccc\",\n          strokeWidth: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), [0, 0.25, 0.5, 0.75, 1].map(ratio => {\n          const value = maxValue - ratio * valueRange;\n          const y = padding + ratio * (height - 2 * padding);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: padding - 5,\n              y1: y,\n              x2: padding,\n              y2: y,\n              stroke: \"#ccc\",\n              strokeWidth: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: padding - 10,\n              y: y + 4,\n              textAnchor: \"end\",\n              fontSize: \"11\",\n              fill: \"#666\",\n              children: currentData.format(value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, ratio, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: padding,\n          y1: avgY,\n          x2: width - padding,\n          y2: avgY,\n          stroke: \"#888\",\n          strokeDasharray: \"4 2\",\n          strokeWidth: \"1.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), createAvgFillPolygons(), createSegments().map((seg, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: seg.x1,\n          y1: seg.y1,\n          x2: seg.x2,\n          y2: seg.y2,\n          stroke: seg.color,\n          strokeWidth: \"3\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: width - padding - 10,\n          y: padding - 30,\n          textAnchor: \"end\",\n          fontSize: \"13\",\n          fill: \"#666\",\n          fontWeight: \"medium\",\n          children: [currentDates[0], \" - \", currentDates[currentDates.length - 1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), currentDates.map((date, i) => {\n          if (i % Math.ceil(dateCount / 6) === 0) {\n            const x = padding + i * xStep;\n            return /*#__PURE__*/_jsxDEV(\"text\", {\n              x: x,\n              y: height - padding + 20,\n              textAnchor: \"middle\",\n              fontSize: \"11\",\n              fill: \"#666\",\n              children: new Date(date).toLocaleDateString('ko-KR', {\n                month: 'short',\n                day: 'numeric'\n              })\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '16px',\n        padding: '12px',\n        backgroundColor: 'rgba(229, 223, 209, 0.5)',\n        borderRadius: '6px',\n        fontSize: '14px',\n        color: '#555'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '8px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [currentData.name, \" \\uC815\\uBCF4:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uCD5C\\uACE0\\uAC12:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), \" \", currentData.format(maxValue)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uCD5C\\uC800\\uAC12:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this), \" \", currentData.format(minValue)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD3C9\\uADE0\\uAC12:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this), \" \", currentData.format(avgValue)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uCD5C\\uADFC\\uAC12:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this), \" \", currentData.format(currentData.data[currentData.data.length - 1])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(CombinedFinancialChart, \"8Hi0xc4qBfnzPGfqG+wLr0FPPQA=\");\n_c = CombinedFinancialChart;\nexport default CombinedFinancialChart;\nvar _c;\n$RefreshReg$(_c, \"CombinedFinancialChart\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CombinedFinancialChart","treasuryData","fxData","loading","error","_s","selectedType","setSelectedType","style","textAlign","padding","color","backgroundColor","borderRadius","border","children","fileName","_jsxFileName","lineNumber","columnNumber","dates","width","height","dataInfo","us_2y","name","data","format","v","toFixed","decimals","us_10y","usd_krw","toLocaleString","eur_usd","currentData","currentValues","filter","val","undefined","currentDates","length","maxValue","Math","max","minValue","min","valueRange","avgValue","reduce","sum","dateCount","xStep","yScale","value","avgY","createAvgFillPolygons","aboveAreas","belowAreas","currentArea","currentType","pushArea","type","area","push","i","x","y","isAbove","prevIdx","prevVal","x1","y1","x2","y2","t","crossX","crossY","polygons","forEach","points","map","p","join","fill","stroke","pointerEvents","createSegments","segments","v1","v2","above1","above2","marginBottom","display","gap","flexWrap","Object","keys","key","isSelected","mainColor","onClick","cursor","fontWeight","fontSize","transition","overflowX","minWidth","id","patternUnits","d","strokeWidth","offset","stopColor","stopOpacity","ratio","textAnchor","strokeDasharray","seg","date","ceil","Date","toLocaleDateString","month","day","marginTop","justifyContent","alignItems","_c","$RefreshReg$"],"sources":["/Users/hyungjuncho/Documents/SNU_BFA/KB_capstone/KB_PB_Agent_AI_JinShiWang/frontend/src/components/market_pipeline/FICCchart.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CombinedFinancialChart = ({ treasuryData, fxData, loading, error }) => {\n  const [selectedType, setSelectedType] = useState('us_2y');\n\n  if (loading) {\n    return (\n      <div style={{ \n        textAlign: 'center', \n        padding: '40px', \n        color: '#666',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px',\n        border: '1px solid #e9ecef'\n      }}>\n        금융 데이터를 불러오는 중...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={{ \n        textAlign: 'center', \n        padding: '40px', \n        color: '#d32f2f',\n        backgroundColor: '#ffebee',\n        borderRadius: '8px',\n        border: '1px solid #ffcdd2'\n      }}>\n        금융 데이터를 불러오는데 실패했습니다: {error}\n      </div>\n    );\n  }\n\n  if (!treasuryData || !fxData || !treasuryData.dates || !fxData.dates) {\n    return (\n      <div style={{ \n        textAlign: 'center', \n        padding: '40px', \n        color: '#666',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px',\n        border: '1px solid #e9ecef'\n      }}>\n        금융 데이터가 없습니다.\n      </div>\n    );\n  }\n\n  // 차트 크기 설정\n  const width = 800;\n  const height = 300;\n  const padding = 50;\n\n  // 모든 데이터 타입 정보\n  const dataInfo = {\n    us_2y: {\n      name: '미국 국채 2년물',\n      color: '#e74c3c',\n      data: treasuryData.us_2y,\n      dates: treasuryData.dates,\n      format: v => v?.toFixed(2) + '%',\n      decimals: 2\n    },\n    us_10y: {\n      name: '미국 국채 10년물',\n      color: '#3498db',\n      data: treasuryData.us_10y,\n      dates: treasuryData.dates,\n      format: v => v?.toFixed(2) + '%',\n      decimals: 2\n    },\n    usd_krw: {\n      name: 'USD/KRW',\n      color: '#e67e22',\n      data: fxData.usd_krw,\n      dates: fxData.dates,\n      format: v => v?.toLocaleString(),\n      decimals: 0\n    },\n    eur_usd: {\n      name: 'EUR/USD',\n      color: '#9b59b6',\n      data: fxData.eur_usd,\n      dates: fxData.dates,\n      format: v => v?.toFixed(4),\n      decimals: 4\n    }\n  };\n\n  const currentData = dataInfo[selectedType];\n  const currentValues = currentData.data.filter(val => val !== null && val !== undefined);\n  const currentDates = currentData.dates;\n\n  if (currentValues.length === 0) {\n    return (\n      <div style={{ \n        textAlign: 'center', \n        padding: '40px', \n        color: '#666',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px',\n        border: '1px solid #e9ecef'\n      }}>\n        선택된 기간의 데이터가 없습니다.\n      </div>\n    );\n  }\n\n  const maxValue = Math.max(...currentValues);\n  const minValue = Math.min(...currentValues);\n  const valueRange = maxValue - minValue || 1;\n  const avgValue = currentValues.reduce((sum, v) => sum + v, 0) / currentValues.length;\n  const dateCount = currentDates.length;\n  const xStep = (width - 2 * padding) / (dateCount - 1 || 1);\n\n  const yScale = (value) => {\n    if (value === null || value === undefined) return null;\n    return padding + ((maxValue - value) / valueRange) * (height - 2 * padding);\n  };\n\n  // 평균선 Y 좌표\n  const avgY = yScale(avgValue);\n\n  // fill_between 영역 polygon 생성 (평균선 기준)\n  const createAvgFillPolygons = () => {\n    const aboveAreas = [];\n    const belowAreas = [];\n    let currentArea = [];\n    let currentType = null;\n\n    function pushArea(type, area) {\n      if (area.length > 1) {\n        (type === 'above' ? aboveAreas : belowAreas).push([...area]);\n      }\n    }\n\n    for (let i = 0; i < currentData.data.length; i++) {\n      const val = currentData.data[i];\n      if (val === null || val === undefined) continue;\n      \n      const x = padding + i * xStep;\n      const y = yScale(val);\n      const isAbove = val >= avgValue;\n\n      if (currentType === null) {\n        currentType = isAbove ? 'above' : 'below';\n        currentArea.push({ x, y });\n      } else if ((isAbove && currentType === 'above') || (!isAbove && currentType === 'below')) {\n        currentArea.push({ x, y });\n      } else {\n        // 평균선과 교차: 보간점 추가\n        const prevIdx = i - 1;\n        const prevVal = currentData.data[prevIdx];\n        const x1 = padding + prevIdx * xStep;\n        const y1 = yScale(prevVal);\n        const x2 = x;\n        const y2 = y;\n        const t = (avgValue - prevVal) / (val - prevVal);\n        const crossX = x1 + t * (x2 - x1);\n        const crossY = avgY;\n        \n        currentArea.push({ x: crossX, y: crossY });\n        pushArea(currentType, currentArea);\n        currentType = isAbove ? 'above' : 'below';\n        currentArea = [{ x: crossX, y: crossY }, { x, y }];\n      }\n    }\n    pushArea(currentType, currentArea);\n\n    // polygon 생성\n    const polygons = [];\n    aboveAreas.forEach(area => {\n      const points = [\n        { x: area[0].x, y: avgY },\n        ...area,\n        { x: area[area.length - 1].x, y: avgY }\n      ];\n      polygons.push(\n        <polygon\n          key={'avg-above-' + area[0].x}\n          points={points.map(p => `${p.x},${p.y}`).join(' ')}\n          fill=\"url(#red-gradient-treasury)\"\n          stroke=\"none\"\n          style={{ pointerEvents: 'none' }}\n        />\n      );\n    });\n\n    belowAreas.forEach(area => {\n      const points = [\n        { x: area[0].x, y: avgY },\n        ...area,\n        { x: area[area.length - 1].x, y: avgY }\n      ];\n      polygons.push(\n        <polygon\n          key={'avg-below-' + area[0].x}\n          points={points.map(p => `${p.x},${p.y}`).join(' ')}\n          fill=\"url(#blue-gradient-treasury)\"\n          stroke=\"none\"\n          style={{ pointerEvents: 'none' }}\n        />\n      );\n    });\n    return polygons;\n  };\n\n  // 구간별 색상 라인(평균선 기준)\n  const createSegments = () => {\n    const segments = [];\n    for (let i = 0; i < currentData.data.length - 1; i++) {\n      const v1 = currentData.data[i];\n      const v2 = currentData.data[i + 1];\n      if (v1 === null || v1 === undefined || v2 === null || v2 === undefined) continue;\n      \n      const x1 = padding + i * xStep;\n      const y1 = yScale(v1);\n      const x2 = padding + (i + 1) * xStep;\n      const y2 = yScale(v2);\n      const above1 = v1 >= avgValue;\n      const above2 = v2 >= avgValue;\n\n      if (above1 === above2) {\n        segments.push({ x1, y1, x2, y2, color: above1 ? '#ef4444' : '#3b82f6' });\n      } else {\n        // 평균선과 교차\n        const t = (avgValue - v1) / (v2 - v1);\n        const crossX = x1 + t * (x2 - x1);\n        const crossY = avgY;\n        segments.push({ x1, y1, x2: crossX, y2: crossY, color: above1 ? '#ef4444' : '#3b82f6' });\n        segments.push({ x1: crossX, y1: crossY, x2, y2, color: above2 ? '#ef4444' : '#3b82f6' });\n      }\n    }\n    return segments;\n  };\n\n  return (\n    <div style={{ \n      backgroundColor: '#ffffff',\n      borderRadius: '8px',\n      border: '1px solid #e0e0e0',\n      padding: '20px',\n      marginBottom: '8px'\n    }}>\n      {/* 버튼 row - TreasuryYieldsChart 스타일 */}\n      <div style={{ \n        marginBottom: '20px',\n        display: 'flex',\n        gap: '8px',\n        flexWrap: 'wrap',\n      }}>\n        {Object.keys(dataInfo).map((key) => {\n          const isSelected = selectedType === key;\n          const mainColor = '#EFC352';\n          return (\n            <button\n              key={key}\n              onClick={() => setSelectedType(key)}\n              style={{\n                padding: '8px 16px',\n                border: isSelected ? `2px solid ${mainColor}` : '1px solid #ddd',\n                borderRadius: '6px',\n                backgroundColor: isSelected ? `${mainColor}20` : '#fff',\n                color: isSelected ? mainColor : '#333',\n                cursor: 'pointer',\n                fontWeight: isSelected ? 'bold' : 'normal',\n                fontSize: '14px',\n                transition: 'all 0.2s ease'\n              }}\n            >\n              {dataInfo[key].name}\n            </button>\n          );\n        })}\n      </div>\n\n      <div style={{ overflowX: 'auto' }}>\n        <svg width={width} height={height} style={{ minWidth: '800px' }}>\n          {/* 배경 격자 */}\n          <defs>\n            <pattern id=\"grid-combined\" width=\"50\" height=\"50\" patternUnits=\"userSpaceOnUse\">\n              <path d=\"M 50 0 L 0 0 0 50\" fill=\"none\" stroke=\"#f0f0f0\" strokeWidth=\"1\"/>\n            </pattern>\n            {/* 그라데이션 정의 */}\n            <linearGradient id=\"red-gradient-treasury\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stopColor=\"#ef4444\" stopOpacity=\"0.25\" />\n              <stop offset=\"100%\" stopColor=\"#ef4444\" stopOpacity=\"0.05\" />\n            </linearGradient>\n            <linearGradient id=\"blue-gradient-treasury\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0\">\n              <stop offset=\"0%\" stopColor=\"#3b82f6\" stopOpacity=\"0.18\" />\n              <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0.05\" />\n            </linearGradient>\n          </defs>\n          <rect width={width} height={height} fill=\"url(#grid-combined)\" />\n          \n          {/* Y축 */}\n          <line x1={padding} y1={padding} x2={padding} y2={height - padding} stroke=\"#ccc\" strokeWidth=\"1\" />\n          {/* X축 */}\n          <line x1={padding} y1={height - padding} x2={width - padding} y2={height - padding} stroke=\"#ccc\" strokeWidth=\"1\" />\n          \n          {/* Y축 눈금 및 레이블 (내림차순) */}\n          {[0, 0.25, 0.5, 0.75, 1].map((ratio) => {\n            const value = maxValue - ratio * valueRange;\n            const y = padding + ratio * (height - 2 * padding);\n            return (\n              <g key={ratio}>\n                <line x1={padding - 5} y1={y} x2={padding} y2={y} stroke=\"#ccc\" strokeWidth=\"1\" />\n                <text x={padding - 10} y={y + 4} textAnchor=\"end\" fontSize=\"11\" fill=\"#666\">\n                  {currentData.format(value)}\n                </text>\n              </g>\n            );\n          })}\n          \n          {/* 평균선 (기준선) */}\n          <line \n            x1={padding} \n            y1={avgY} \n            x2={width - padding} \n            y2={avgY} \n            stroke=\"#888\" \n            strokeDasharray=\"4 2\" \n            strokeWidth=\"1.5\" \n          />\n          \n          {/* fill_between 영역 (평균선 기준) */}\n          {createAvgFillPolygons()}\n          \n          {/* 구간별 색상 라인 (평균선 기준) */}\n          {createSegments().map((seg, i) => (\n            <line\n              key={i}\n              x1={seg.x1}\n              y1={seg.y1}\n              x2={seg.x2}\n              y2={seg.y2}\n              stroke={seg.color}\n              strokeWidth=\"3\"\n            />\n          ))}\n          \n          {/* 기간 정보 우상단 표시 */}\n          <text\n            x={width - padding - 10}\n            y={padding - 30}\n            textAnchor=\"end\"\n            fontSize=\"13\"\n            fill=\"#666\"\n            fontWeight=\"medium\"\n          >\n            {currentDates[0]} - {currentDates[currentDates.length - 1]}\n          </text>\n          \n          {/* X축 날짜 레이블 (일부만) */}\n          {currentDates.map((date, i) => {\n            if (i % Math.ceil(dateCount / 6) === 0) {\n              const x = padding + i * xStep;\n              return (\n                <text\n                  key={i}\n                  x={x}\n                  y={height - padding + 20}\n                  textAnchor=\"middle\"\n                  fontSize=\"11\"\n                  fill=\"#666\"\n                >\n                  {new Date(date).toLocaleDateString('ko-KR', { month: 'short', day: 'numeric' })}\n                </text>\n              );\n            }\n            return null;\n          })}\n        </svg>\n      </div>\n      \n      {/* 간단한 요약 - TreasuryYieldsChart 스타일 */}\n      <div style={{ \n        marginTop: '16px',\n        padding: '12px',\n        backgroundColor: 'rgba(229, 223, 209, 0.5)',\n        borderRadius: '6px',\n        fontSize: '14px',\n        color: '#555'\n      }}>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>{currentData.name} 정보:</strong>\n        </div>\n        <div style={{ display: 'flex', gap: '20px', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'center' }}>\n          <span><strong>최고값:</strong> {currentData.format(maxValue)}</span>\n          <span><strong>최저값:</strong> {currentData.format(minValue)}</span>\n          <span><strong>평균값:</strong> {currentData.format(avgValue)}</span>\n          <span><strong>최근값:</strong> {currentData.format(currentData.data[currentData.data.length - 1])}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CombinedFinancialChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}