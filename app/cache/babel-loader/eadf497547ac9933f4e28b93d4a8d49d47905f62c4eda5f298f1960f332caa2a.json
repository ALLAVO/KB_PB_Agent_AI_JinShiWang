{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000/api/v1';\n\n// 미국 주요 지수 6개월치 데이터 가져오기\nexport const fetchIndices6MonthsChart = async endDate => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/indices-6months-chart`);\n    url.searchParams.append('end_date', endDate);\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching indices chart data:', error);\n    throw error;\n  }\n};\n\n// 미국 국채 금리 6개월치 데이터 가져오기\nexport const fetchTreasuryYields6MonthsChart = async endDate => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/treasury-yields-6months-chart`);\n    url.searchParams.append('end_date', endDate);\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching treasury yields chart data:', error);\n    throw error;\n  }\n};\n\n// 환율 6개월치 데이터 가져오기\nexport const fetchFx6MonthsChart = async endDate => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/fx-6months-chart`);\n    url.searchParams.append('end_date', endDate);\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching FX chart data:', error);\n    throw error;\n  }\n};\n\n// 미국 주요 지수 1년치 데이터 가져오기 (테이블용)\nexport const fetchIndices1YearChart = async endDate => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/indices-1year-chart`);\n    url.searchParams.append('end_date', endDate);\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching 1-year indices data:', error);\n    throw error;\n  }\n};\n\n// 미국 국채 금리 1년치 데이터 가져오기\nexport const fetchTreasuryYields1YearChart = async endDate => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/treasury-yields-1year-chart`);\n    url.searchParams.append('end_date', endDate);\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching 1-year treasury yields data:', error);\n    throw error;\n  }\n};\n\n// 환율 1년치 데이터 가져오기\nexport const fetchFx1YearChart = async endDate => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/fx-1year-chart`);\n    url.searchParams.append('end_date', endDate);\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching 1-year FX data:', error);\n    throw error;\n  }\n};\n\n// 시장 핫한 기사 TOP 3 가져오기\nexport const fetchMarketHotArticles = async endDate => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/hot-articles`);\n    url.searchParams.append('end_date', endDate);\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching market hot articles:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchIndices6MonthsChart","endDate","url","URL","searchParams","append","response","fetch","toString","method","headers","ok","Error","status","data","json","error","console","fetchTreasuryYields6MonthsChart","fetchFx6MonthsChart","fetchIndices1YearChart","fetchTreasuryYields1YearChart","fetchFx1YearChart","fetchMarketHotArticles"],"sources":["/Users/hyungjuncho/Documents/SNU_BFA/KB_capstone/KB_PB_Agent_AI_JinShiWang/frontend/src/api/market.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000/api/v1';\n\n// 미국 주요 지수 6개월치 데이터 가져오기\nexport const fetchIndices6MonthsChart = async (endDate) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/indices-6months-chart`);\n    url.searchParams.append('end_date', endDate);\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching indices chart data:', error);\n    throw error;\n  }\n};\n\n// 미국 국채 금리 6개월치 데이터 가져오기\nexport const fetchTreasuryYields6MonthsChart = async (endDate) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/treasury-yields-6months-chart`);\n    url.searchParams.append('end_date', endDate);\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching treasury yields chart data:', error);\n    throw error;\n  }\n};\n\n// 환율 6개월치 데이터 가져오기\nexport const fetchFx6MonthsChart = async (endDate) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/fx-6months-chart`);\n    url.searchParams.append('end_date', endDate);\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching FX chart data:', error);\n    throw error;\n  }\n};\n\n// 미국 주요 지수 1년치 데이터 가져오기 (테이블용)\nexport const fetchIndices1YearChart = async (endDate) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/indices-1year-chart`);\n    url.searchParams.append('end_date', endDate);\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching 1-year indices data:', error);\n    throw error;\n  }\n};\n\n// 미국 국채 금리 1년치 데이터 가져오기\nexport const fetchTreasuryYields1YearChart = async (endDate) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/treasury-yields-1year-chart`);\n    url.searchParams.append('end_date', endDate);\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching 1-year treasury yields data:', error);\n    throw error;\n  }\n};\n\n// 환율 1년치 데이터 가져오기\nexport const fetchFx1YearChart = async (endDate) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/fx-1year-chart`);\n    url.searchParams.append('end_date', endDate);\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching 1-year FX data:', error);\n    throw error;\n  }\n};\n\n// 시장 핫한 기사 TOP 3 가져오기\nexport const fetchMarketHotArticles = async (endDate) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/market/hot-articles`);\n    url.searchParams.append('end_date', endDate);\n\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching market hot articles:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}